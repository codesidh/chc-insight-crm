{
  "name": "@chc-insight/backend",
  "version": "1.0.0",
  "private": true,
  "description": "CHC Insight CRM Backend - Node.js/Express API",
  "main": "dist/index.js",
  "scripts": {
    "dev": "cross-env NODE_ENV=development nodemon src/index.ts",
    "dev:debug": "cross-env NODE_ENV=development nodemon --inspect src/index.ts",
    "dev:staging": "cross-env NODE_ENV=staging nodemon src/index.ts",
    "build": "npm run clean && npm run type-check && tsc",
    "build:watch": "tsc --watch",
    "build:production": "npm run clean && npm run lint && npm run type-check && tsc --project tsconfig.production.json",
    "start": "node dist/index.js",
    "start:dev": "cross-env NODE_ENV=development node dist/index.js",
    "start:staging": "cross-env NODE_ENV=staging node dist/index.js",
    "start:prod": "cross-env NODE_ENV=production node dist/index.js",
    "lint": "eslint src --ext .ts",
    "lint:fix": "eslint src --ext .ts --fix",
    "lint:ci": "eslint src --ext .ts --format json --output-file eslint-report.json",
    "format": "prettier --write \"src/**/*.{ts,js,json,md}\" \"*.{js,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,js,json,md}\" \"*.{js,json,md}\"",
    "test": "cross-env NODE_ENV=test jest --passWithNoTests",
    "test:watch": "cross-env NODE_ENV=test jest --watch --passWithNoTests",
    "test:coverage": "cross-env NODE_ENV=test jest --coverage --passWithNoTests",
    "test:ci": "cross-env NODE_ENV=test jest --ci --coverage --watchAll=false --passWithNoTests",
    "test:debug": "cross-env NODE_ENV=test node --inspect-brk node_modules/.bin/jest --runInBand --passWithNoTests",
    "test:unit": "cross-env NODE_ENV=test jest --testPathPattern=unit --passWithNoTests",
    "test:integration": "cross-env NODE_ENV=test jest --testPathPattern=integration --passWithNoTests",
    "type-check": "tsc --noEmit",
    "type-check:watch": "tsc --noEmit --watch",
    "clean": "rimraf dist coverage eslint-report.json",
    "clean:all": "rimraf dist coverage node_modules eslint-report.json",
    "db:migrate": "knex migrate:latest --knexfile src/config/knexfile.ts",
    "db:migrate:rollback": "knex migrate:rollback --knexfile src/config/knexfile.ts",
    "db:migrate:status": "knex migrate:currentVersion --knexfile src/config/knexfile.ts",
    "db:migrate:dev": "cross-env NODE_ENV=development knex migrate:latest --knexfile src/config/knexfile.ts",
    "db:migrate:test": "cross-env NODE_ENV=test knex migrate:latest --knexfile src/config/knexfile.ts",
    "db:migrate:staging": "cross-env NODE_ENV=staging knex migrate:latest --knexfile src/config/knexfile.ts",
    "db:migrate:prod": "cross-env NODE_ENV=production knex migrate:latest --knexfile src/config/knexfile.ts",
    "db:seed": "knex seed:run --knexfile src/config/knexfile.ts",
    "db:seed:dev": "cross-env NODE_ENV=development knex seed:run --knexfile src/config/knexfile.ts",
    "db:seed:test": "cross-env NODE_ENV=test knex seed:run --knexfile src/config/knexfile.ts",
    "db:create-migration": "knex migrate:make --knexfile src/config/knexfile.ts",
    "db:create-seed": "knex seed:make --knexfile src/config/knexfile.ts",
    "db:reset": "npm run db:migrate:rollback && npm run db:migrate && npm run db:seed",
    "db:reset:test": "cross-env NODE_ENV=test npm run db:migrate:rollback && cross-env NODE_ENV=test npm run db:migrate && cross-env NODE_ENV=test npm run db:seed",
    "db:script": "ts-node src/scripts/database.ts",
    "db:setup": "ts-node src/scripts/setup-database.ts",
    "db:setup:dev": "cross-env NODE_ENV=development ts-node src/scripts/setup-database.ts",
    "db:setup:test": "cross-env NODE_ENV=test ts-node src/scripts/setup-database.ts",
    "dev:utils": "ts-node src/scripts/dev-utils.ts",
    "security:audit": "npm audit --audit-level moderate",
    "security:fix": "npm audit fix",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "precommit": "npm run lint && npm run format:check && npm run type-check",
    "prepush": "npm run test:ci",
    "validate": "npm run lint && npm run format:check && npm run type-check && npm run test:ci",
    "ci": "npm run validate && npm run build",
    "docker:build": "docker build -t chc-insight-backend .",
    "docker:run": "docker run -p 3001:3001 chc-insight-backend"
  },
  "dependencies": {
    "@types/bcryptjs": "^2.4.6",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/passport": "^1.0.17",
    "@types/passport-jwt": "^4.0.1",
    "@types/passport-local": "^1.0.38",
    "bcryptjs": "^3.0.2",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.0",
    "express": "^4.18.0",
    "helmet": "^7.0.0",
    "jsonwebtoken": "^9.0.2",
    "knex": "^3.0.0",
    "passport": "^0.7.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "pg": "^8.11.0",
    "redis": "^4.6.0",
    "zod": "^4.1.12"
  },
  "devDependencies": {
    "@types/compression": "^1.7.0",
    "@types/cors": "^2.8.0",
    "@types/express": "^4.17.0",
    "@types/jest": "^29.0.0",
    "@types/node": "^20.0.0",
    "@types/pg": "^8.10.0",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "commander": "^10.0.1",
    "cross-env": "^10.1.0",
    "eslint": "^8.0.0",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-prettier": "^5.5.4",
    "jest": "^29.0.0",
    "nodemon": "^3.0.0",
    "prettier": "^3.6.2",
    "rimraf": "^5.0.5",
    "ts-jest": "^29.0.0",
    "ts-node": "^10.9.0",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.5.4"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
