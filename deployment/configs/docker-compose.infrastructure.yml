version: '3.8'

# Infrastructure services that persist across deployments
# PostgreSQL and Redis with persistent volumes

services:
  # PostgreSQL Database - Persistent Infrastructure
  postgres:
    image: postgres:15-alpine
    container_name: chc-crm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-chc_insight_crm}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - chc-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-chc_insight_crm}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # Redis Cache - Persistent Infrastructure
  redis:
    image: redis:7-alpine
    container_name: chc-crm-redis
    restart: unless-stopped
    command: >
      redis-server
      --requirepass ${REDIS_PASSWORD:-redis_password_123}
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - chc-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.25'
        reservations:
          memory: 256M
          cpus: '0.1'

networks:
  chc-network:
    driver: bridge
    name: chc-crm-network
    external: false

volumes:
  postgres_data:
    driver: local
    name: chc-crm-postgres-data
  redis_data:
    driver: local
    name: chc-crm-redis-data